server:
  port: 9009
  servlet:
    context-path: /api
spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/league?serverTimezone=GMT
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
  kafka:
    # kafka集群
    bootstrap-servers: 192.168.88.128:9092
    producer:
      # 重试次数
      retries: 0
      # 应答级别，多少副本同步完成时像生产者发送ack（0--立即返回；1--leader；-1--all replicas）
      acks: 1
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 批量大小 16kb https://blog.csdn.net/u011624903/article/details/108731672
      batch-size: 16384
      properties:
        # 生产端积累的消息到达batch-size或等待时间超过linger.ms，就会提交kafka；
        # linger.ms代表每生产一条就提交kafka，此时batch-size不生效
        linger:ms: 0
        # 自定义分区策略
        partitioner:class: com.example.demo.kafka.CustomPartitioner
    consumer:
      # 是否自动提交offset
      enable-auto-commit: true
      # 提交offset延时(接收到消息后多久提交offset)
      auto:commit:interval:ms: 1000
      # 当kafka中没有初始offset或offset超出范围时将自动重置offset：
      # earliest：重置为分区中最小的offset；
      # latest：重置为分区中最新的offset(消费分区中新产生的数据)；
      # none：只要有一个分区不存在已提交的offset，就抛出异常
      auto-offset-reset: latest
      listener:
        # 消费端监听的topic不存在时，项目启动会报错(关掉)
        missing-topics-fatal: false
        # 设置批量消费
        type: batch
      # 批量消费每次最多消费多少条消息
      max-poll-records: 50
      properties:
        # 默认的消费组ID
        group-id: mygroup
        # 消费会话超时时间(超过这个时间consumer没有发送心跳,就会触发rebalance操作)
        session:timeout:ms: 120000
        # 消费请求超时时间
        request:timeout:ms: 180000

mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*Mapper.xml
  global-config:
    db-config:
      #全局默认主键类型
      id-type: input
      #字段验证策略，not-null默认策略，不会对null做处理
      update-strategy: not-null
      insert-strategy: not-null
      select-strategy: not-null
  configuration:
    #驼峰命名，默认true-开启，建议关闭
    map-underscore-to-camel-case: false
    #保存null时可能会报错，加上这个会解决，建议配上
    jdbc-type-for-null: 'null'
    # 配置slq打印日志(ibatis)
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  #MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使用类名，而不用使用全限定的类名(即 XML 中调用的时候不用包含包名)
  #type-aliases-package: com.example.demo.transaction.entity










